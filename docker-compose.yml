version: "3.4"

services:
  robber:
    image: es-domain-events/php:robber
    hostname: "robber"
    build:
      context: ./robber/docker
    container_name: robber
    networks:
      - broker-kafka
    restart: unless-stopped
    volumes:
      - ./robber/app:/app
    env_file:
      - ./robber/dev.env
  house:
    image: es-domain-events/php:house
    hostname: "house"
    build:
      context: ./house/docker
    networks:
      - broker-kafka
    container_name: house
    restart: unless-stopped
    volumes:
      - ./house/app:/app

  narrator:
    image: es-domain-events/php:narrator
    hostname: "narrator"
    build:
      context: ./narrator/docker
    networks:
      - broker-kafka
    container_name: narrator
    restart: unless-stopped
    volumes:
      - ./narrator/app:/app
    env_file:
      - ./narrator/dev.env
      
  hub:
    image: es-domain-events/php:hub
    hostname: "hub"
    build:
      context: ./hub/docker
    networks:
      - broker-kafka
    container_name: hub
    restart: unless-stopped
    volumes:
      - ./hub/app:/app
    env_file:
      - ./hub/dev.env
      
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    hostname: 'zookeeper'
    container_name: 'es-zookeeper'
    networks:
      - broker-kafka
    env_file:
      - dev.env

  kafka:
    image: confluentinc/cp-kafka:latest
    hostname: 'kafka'
    container_name: 'es-kafka'
    networks:
      - broker-kafka
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    env_file:
    - dev.env

  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    networks:
      - broker-kafka
    depends_on:
      - kafka
    ports:
      - 19000:9000
    env_file:
      - dev.env

networks:
  broker-kafka:
    driver: bridge